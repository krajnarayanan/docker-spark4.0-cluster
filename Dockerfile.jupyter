# FROM continuumio/miniconda3 AS builder
# RUN rm /bin/sh && ln -s /bin/bash /bin/sh
# RUN apt-get -y update && apt-get -y install curl unzip zip
# COPY environment.yaml /tmp/environment.yaml
# RUN conda update -n base -c defaults conda && \
#     conda init bash && \
#     conda env create -f /tmp/environment.yaml 
# RUN curl -s "https://get.sdkman.io" | /bin/bash 
# RUN  source /root/.sdkman/bin/sdkman-init.sh
# RUN sdk install -y java 17.0.16-tem 
# SHELL ["conda", "run", "-n", "myenv", "/bin/bash", "-c"]



# CMD ["jupyter", "lab", "--ip='0.0.0.0'", "--allow-root", "--no-browser", "--NotebookApp.token=''","--NotebookApp.password=''" ]




# # Stage 1: Build environment with Miniconda
# FROM continuumio/miniconda3 AS builder

# # Create and activate a Conda environment
# COPY environment.yml .
# RUN conda env create -f environment.yml

# # Check the created environment
# RUN conda run -n myenv python -c "import sys; print(sys.prefix)"

# # Stage 2: Create a minimal production image
# FROM python:3.10-slim

# # Copy the created environment from the builder stage
# COPY --from=builder /opt/conda/envs/myenv/ /usr/local/conda/envs/myenv

# # Set the PATH to include the new environment's executables
# ENV PATH="/usr/local/conda/envs/myenv/bin:$PATH"

# # Set the working directory
# WORKDIR /app

# # Copy the application code
# COPY . .

# # Install dependencies (if any) and run the application
# CMD ["python", "app.py"]

# FROM continuumio/miniconda3 AS builder
# RUN conda config --add channels conda-forge && conda config --set channel_priority strict
# COPY environment.yaml .
# RUN conda env create -f environment.yaml
# #RUN conda run -n myenv python -c "import sys; print(sys.prefix)"


FROM eclipse-temurin:17.0.16_8-jdk-jammy
#COPY --from=builder /opt/conda/envs/jupyter-env/ /usr/local/conda/envs/jupyter-env
#COPY --from=builder /opt/conda/ /opt/conda/

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common && \
    rm -rf /var/lib/apt/lists/*

# Add the deadsnakes PPA to access Python 3.10
RUN add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y python3.10 python3.10-distutils python3.10-venv sudo python3-pip
RUN pip install --upgrade pip && \
    rm -rf /var/lib/apt/lists/*

# Set Python 3.10 as the default python3 (optional, but often useful)
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1 
RUN pip install pyspark==4.0.0 jupyterlab
RUN useradd -ms /bin/bash jupyter && mkdir /home/jupyter/notebooks

#CMD ["jupyter", "lab", "--ip='0.0.0.0'", "--allow-root", "--no-browser", "--NotebookApp.token=''","--NotebookApp.password=''" ]